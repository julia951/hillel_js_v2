let str = "DataTypes";
let letter = str[1]; //Код отримує другий символ рядка str за допомогою індексу 1 і зберігає його в змінній letter
console.log(letter);

let text = "Джаваскріпт - це цікаво";
let length = text.length; 
console.log(length); //Цей код виведе довжину рядка text у консоль.

var result = "qwerty" / 0; //У JavaScript спроба розділити рядок на число (або на нуль) призведе до отримання спеціального значення, що називається "NaN" (Not a Number). "NaN" використовується для позначення значень, які не є числами.
console.log(nan)

var guessWho = 3.14;
guessWho = 'А тепер тут строка';
guessWho = false;
guessWho = 8.97;
console.log(guessWho) //Останнє присвоєння перезаписує попереднє значення. Отже, на момент виклику console.log(guessWho) змінна guessWho містить число 8.97, і це значення буде виведене у консоль.

const num = 68;
const str1 = "Borsh";
const result = num + str1;
console.log(result) //Якщо один із операндів є рядком, то інший операнд буде автоматично перетворений у рядок, і операція додавання буде виконана як конкатенація рядків

var result = "30" - 3;
console.log(result); //У JavaScript, якщо ви віднімаєте число від рядка, JavaScript спробує автоматично перетворити рядок у число. Тому вираз "30" - 43 буде розглядатися як віднімання чисел, а не конкатенація рядків.

let n = 5;
n *= 4 + 9;
console.log(n);
//У вашому виразі n *= 4 + 9, ви використовуєте оператор множення з присвоєнням, щоб помножити значення змінної n на результат виразу 4 + 9. 
//Спочатку обчислюється вираз 4 + 9, який дорівнює 13, а потім значення n (яке раніше було 5) множиться на 13.

var a = 9;
var b = 7;
var c = a = b;
console.log(c)
//Спочатку відбувається присвоєння b значення a (тобто a тепер дорівнює 7). Після цього вираження a = b має значення 7, і воно також присвоюється змінній c.

var number = 80;
number %= 2;
console.log(number);
/* Оператор %= у JavaScript є скороченою формою запису для оператора присвоєння залишку від ділення. Вираз number %= 2 еквівалентний виразу number = number % 2.
Таким чином, спочатку відбувається ділення змінної number на 2, а потім вона присвоюється залишок від цього ділення.
У вашому випадку, 80 ділиться на 2 без залишку, тому залишок буде 0. Отже, результат присвоювання цього залишку змінній number буде 0. */

console.log(3 !== '03');
/* Вираз !== в JavaScript перевіряє не лише значення, але і тип даних операндів. Якщо типи даних відрізняються, вираз повертає true, навіть якщо значення може бути конвертовано одне в інше.
У вашому випадку число 3 має тип даних число, а рядок '03' має тип даних рядок, навіть якщо він представляє число. Типи даних відрізняються, тому вираз 3 !== '03' поверне true. */

console.log((+undefined)); //У JavaScript вираз +undefined відображається як невизначено (NaN), оскільки JavaScript не може автоматично конвертувати undefined у числове значення.


let sex = 'female';
let birthday = 29;
let discount;
if (sex === 'male') {
    discount = (birthday >= 25) ? "30%" : "10%";
} else if (sex === 'female') {
    discount = (birthday === 19) ? "30%" : "10%";
} else {
    discount = (birthday === 7) ? "10%" : "5%";
}
console.log(discount) 
/* У вашому коді змінна sex має значення 'female', а birthday має значення 29. Згідно з логікою умов, для жінок знижка буде 10%, якщо birthday не дорівнює 19.
Таким чином, у вашому випадку останнє значення знижки буде "10%". */

console.log(1 && 2 && null && 3 && undefined); // використовується логічний оператор "і" (&&), який повертає перше "брехневе" значення або останнє істинне значення

console.log((null || -1 && 1));
/* 1 Оператор "і" (&&) має вищий пріоритет, тому спочатку обчислюється вираз -1 && 1. Обидва операнди -1 та 1 є істинними значеннями, тому результатом виразу буде останнє істинне значення, тобто 1.
2 Оператор "або" (||) перевіряє обидва операнди. Якщо хоча б один з операндів є істинним, він поверне істинне значення. У даному випадку перший операнд null є "брехневим" значенням, тому вираз продовжується перевіркою другого операнду.
3 Другий операнд 1 є істинним значенням, тому вираз повертає це значення. */

// Яке буде останне значення?
var i = 0;
do {
    i += 4;
    console.log("i = " + i);
} while (i < 11);
/* Початкове значення i - 0.

Перша ітерація: i += 4, отже i стає 4.
Друга ітерація: i += 4, отже i стає 8.
Третя ітерація: i += 4, отже i стає 12. */

/* Завдання 1:

Вирахуйте значення площі трапеції на основі наданих значень.
Площа кола дорівню добутку квадрату радіуса на число Пі(3.1415)
Виведіть результат 

Формула: https://www.elitclass.com.ua/components/com_jshopping/files/img_products/full_a91.jpg
*/

var a = 6; // перша основа
var b = 9; // друга основа
var h = 4; // висота

//Відповідь
let S = ((a + b) * h) / 2;
console.log(S);

/* Завдання 2:

Виведіть на екран cередню ціну на продукти

 */

let productPrice1 = 101.5; // ціна 1го продукту
let productPrice2 = 50.25; // ціна 2го продукту
let productPrice3 = 10.11; // ціна 3го продукту

let productQuantity1 = 5;  // кількість одениць 1го продукту на складі 
let productQuantity2 = 9;  // кількість одениць 2го продукту на складі 
let productQuantity3 = 15; // кількість одениць 3го продукту на складі 


// Відповідь
let avgPrice = (productPrice1 + productPrice2 + productPrice3) / 3;

console.log(avgPrice);


/* Завдання 3: 

Зміни if...else на switch

*/
var value = +prompt("Введіть число 1 або 2");

if (value == 1) {
    alert("Ви ввели число 1");
}
else if (value == 2) {
    alert("Ви ввели число 2");
}
else {
    alert("Вы ввели неправильне значення");
}

// Відповідь
switch (value) {
    case 1:
        alert("Ви ввели число 1");
        break;
    case 2:
        alert("Ви ввели число 2");
        break;
    default:
        alert("Ви ввели неправильне значення");
        break;
}

/* Завдання 4:

За допомогою цикла for виведіть всі числа котрі діляться на 4 між 0 и 100 

*/

// Відповідь
for (let i = 0; i < 100; i++) {
    if (i % 4 == 0) // ділиться на 2 без останку
    {
        console.log(i);
    }
}


/* Завдання 5:

Створіть функцію min(a, b), яка повертає менше число з чисел а и b без використання бібліотеки Math

*/

function min(a, b) {
    return a < b ? a : b;
}

